<!-- app/views/bookings/_form.html.erb -->
<div class="max-w-screen-lg mx-auto p-8 bg-white rounded-lg shadow-black mt-8">
  <%= form_with model: @booking, local: true, id: 'booking-form' do |form| %>
    <h2 class="text-2xl font-semibold text-center mb-6">Booking Form</h2>

    <div class="mb-4">
      <%= form.label :start_date, 'Start Date', class: 'block text-sm font-medium text-gray-700' %>
      <%= form.date_field :start_date, required: true, class: 'w-full px-4 py-2 border border-gray-300 rounded-md', id: 'start_date' %>
    </div>

    <div class="mb-4">
      <%= form.label :end_date, 'End Date', class: 'block text-sm font-medium text-gray-700' %>
      <%= form.date_field :end_date, required: true, class: 'w-full px-4 py-2 border border-gray-300 rounded-md', id: 'end_date' %>
    </div>

    <div class="mb-4">
      <%= form.label :insurance_per_day, 'Insurance per Day ($)', class: 'block text-sm font-medium text-gray-700' %>
      <%= form.select :insurance_per_day, options_for_select([
    ['Basic Coverage - $10.00', 10.0],
    ['Standard Plan - $15.50', 15.5],
    ['Premium Plus - $25.75', 25.75],
    ['Ultra Secure - $40.00', 40.0],
    ['Elite Protection - $55.99', 55.99]
  ]), { prompt: 'Select Insurance' }, { class: 'w-full px-4 py-2 border border-gray-300 rounded-md', id: 'insurance_per_day' } %>
    </div>


    <div class="mb-4">
      <%= form.label :pick_up_spot, 'Pick Up Spot', class: 'block text-sm font-medium text-gray-700' %>
      <%= form.text_field :pick_up_spot, required: true, class: 'w-full px-4 py-2 border border-gray-300 rounded-md' %>
    </div>

    <!-- Hidden field to pass car_id -->
    <%= form.hidden_field :car_id, value: @car.id if @car %>

    <!-- Total cost display -->
    <div class="mb-4">
      <p class="text-lg font-semibold">Total Cost: <span id="total_cost">$0.00</span></p>
    </div>

    <!-- Credit Card Details (Mockup) -->
    <div class="mb-4">
      <h3 class="text-xl font-semibold mb-2">Credit Card Information </h3>
      <input type="text" id="cc_number" placeholder="Card Number" class="w-full px-4 py-2 border border-gray-300 rounded-md mb-2" maxlength="16" />
      <input type="text" id="cc_expiry" placeholder="MM/YY" class="w-full px-4 py-2 border border-gray-300 rounded-md mb-2" maxlength="5" />
      <input type="text" id="cc_cvc" placeholder="CVC" class="w-full px-4 py-2 border border-gray-300 rounded-md mb-2" maxlength="3" />
      <p class="text-sm text-red-500 hidden" id="cc_error">Invalid credit card details</p>
    </div>

    <div class="mb-4">
      <%= form.submit @booking.new_record? ? 'Book Now' : 'Update Booking', class: 'bg-blue-500 text-white px-6 py-2 rounded-md hover:bg-blue-600 transition duration-200' %>
    </div>
  <% end %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const startDateInput = document.getElementById('start_date');
    const endDateInput = document.getElementById('end_date');
    const insuranceInput = document.getElementById('insurance_per_day');
    const totalCostSpan = document.getElementById('total_cost');
    const carPricePerDay = <%= @car.price_per_day.to_f %>;

    const ccNumberInput = document.getElementById('cc_number');
    const ccExpiryInput = document.getElementById('cc_expiry');
    const ccCvcInput = document.getElementById('cc_cvc');
    const ccError = document.getElementById('cc_error');

    function calculateTotalCost() {
      const startDate = Date.parse(startDateInput.value);
      const endDate = Date.parse(endDateInput.value);
      const insurance = parseFloat(insuranceInput.value) || 0;

      if (!isNaN(startDate) && !isNaN(endDate) && endDate > startDate) {
        const days = (((endDate - startDate)) / (1000 * 3600 * 24)) + 1;
        if (days > 0) {
          const carCost = carPricePerDay * days;
          const totalCost = carCost + (insurance * days);
          totalCostSpan.textContent = `$${totalCost.toFixed(2)}`;
        } else {
          totalCostSpan.textContent = '$0.00';
        }
      } else {
        totalCostSpan.textContent = '$0.00';
      }
    }

    function validateCreditCard() {
      const ccNumber = ccNumberInput.value;
      const ccExpiry = ccExpiryInput.value;
      const ccCvc = ccCvcInput.value;
      const ccNumberValid = /^\d{16}$/.test(ccNumber);
      const ccExpiryValid = /^\d{2}\/\d{2}$/.test(ccExpiry);
      const ccCvcValid = /^\d{3}$/.test(ccCvc);

      if (ccNumberValid && ccExpiryValid && ccCvcValid) {
        ccError.classList.add('hidden');
        return true;
      } else {
        ccError.classList.remove('hidden');
        ccError.textContent = 'Invalid credit card details';
        return false;
      }
    }

    startDateInput.addEventListener('change', calculateTotalCost);
    endDateInput.addEventListener('change', calculateTotalCost);
    insuranceInput.addEventListener('input', calculateTotalCost);

    ccNumberInput.addEventListener('input', validateCreditCard);
    ccExpiryInput.addEventListener('input', validateCreditCard);
    ccCvcInput.addEventListener('input', validateCreditCard);

    calculateTotalCost();
  });
</script>
